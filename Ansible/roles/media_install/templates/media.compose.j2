version: "3.3"
services:
    gluetun:
        image: qmcgaw/gluetun:latest
        restart: unless-stopped
        container_name: "{{ container_name }}"
        hostname: gluetun
        networks:
            gluetun_vpn:
        cap_add:
            - NET_ADMIN
        environment:
            - VPN_SERVICE_PROVIDER={{ vpn_service_provider }}
            - VPN_TYPE=wireguard
            - WIREGUARD_PRIVATE_KEY={{ wireguard_private_key }}
            - WIREGUARD_ADDRESSES={{ wireguard_address }}
            - SERVER_CITIES=New York NY
            - DOT_PROVIDERS=quad9
            - UPDATER_PERIOD=48h
        ports:
            - "7676:6767" # Bazarr
            - "9898:8989" # Sonar
            - "8787:7878" # Raddarr
            # - "7878:8787" # Readarr
            - "9845:9117" # Jackett
            - "8687:8686" # Lidarr
            # Qbittorent
            - "9078:9078"
            - "7439:6881/tcp"
            - "7439:6881/udp"
        volumes:
            - "{{ gluetun_config_path }}:/gluetun"
        healthcheck:
            test: {{ health_check_vpn.test }}
            interval: {{ health_check_vpn.interval }}
            retries: {{ health_check_vpn.retries }}
            start_period: {{ health_check_vpn.start_period }}
            timeout: {{ health_check_vpn.timeout }}

    # Request shows automatically, https://hub.docker.com/r/linuxserver/sonarr
    sonarr:
        image: lscr.io/linuxserver/sonarr:latest
        restart: unless-stopped
        network_mode: "{{ unified_network }}"
        container_name: sonarr
        depends_on:
            - gluetun
        environment:
            - TZ={{ time_zone }}
            - PUID="{{ users[0].PUID }}"
            - PGID={{ group_return_values.gid }}
            - UMASK={{ media_UMASK }}
        volumes:
            - "{{ sonarr_config_path }}:/config"
            - "{{ media_path_tv }}:{{ internal_tv }}"
            - "{{ media_path_downloads }}:{{ internal_downloads }}"
        healthcheck:
            test: {{ health_check_vpn.test }}
            interval: {{ health_check_vpn.interval }}
            retries: {{ health_check_vpn.retries }}
            start_period: {{ health_check_vpn.start_period }}
            timeout: {{ health_check_vpn.timeout }}

    # Request movies automatically, https://hub.docker.com/r/linuxserver/radarr
    radarr:
        image: lscr.io/linuxserver/radarr:latest
        restart: unless-stopped
        network_mode: "{{ unified_network }}"
        container_name: radarr
        depends_on:
            - gluetun
        environment:
            - TZ={{ time_zone }}
            - PUID="{{ users[0].PUID }}"
            - PGID={{ group_return_values.gid }}
            - UMASK={{ media_UMASK }}
        volumes:
            - "{{ radarr_config_path }}:/config"
            - "{{ media_path_movies }}:{{ internal_movies }}"
            - "{{ media_path_downloads }}:{{ internal_downloads }}"
        healthcheck:
            test: {{ health_check_vpn.test }}
            interval: {{ health_check_vpn.interval }}
            retries: {{ health_check_vpn.retries }}
            start_period: {{ health_check_vpn.start_period }}
            timeout: {{ health_check_vpn.timeout }}
    
    bazarr:
        image: lscr.io/linuxserver/bazarr:latest
        restart: unless-stopped
        container_name: bazarr
        depends_on:
            - gluetun
        environment:
            - TZ={{ time_zone }}
            - PUID="{{ users[0].PUID }}"
            - PGID={{ group_return_values.gid }}
            - UMASK={{ media_UMASK }}
        network_mode: "{{ unified_network }}"
        volumes:
            - "{{ bazarr_config_path }}:/config"
            - "{{ media_path_tv }}:{{ internal_tv }}"
            - "{{ media_path_movies }}:{{ internal_movies }}"
        healthcheck:
            test: {{ health_check_vpn.test }}
            interval: {{ health_check_vpn.interval }}
            retries: {{ health_check_vpn.retries }}
            start_period: {{ health_check_vpn.start_period }}
            timeout: {{ health_check_vpn.timeout }}
    
    lidarr:
        image: lscr.io/linuxserver/lidarr:latest
        restart: unless-stopped
        container_name: lidarr
        depends_on:
            - gluetun
        environment:
            - TZ={{ time_zone }}
            - PUID="{{ users[0].PUID }}"
            - PGID={{ group_return_values.gid }}
            - UMASK={{ media_UMASK }}
        network_mode: "{{ unified_network }}"
        volumes:
            - "{{ lidarr_config_path }}:/config"
            - "{{ media_path_music }}:{{ internal_music }}"
            - "{{ media_path_downloads }}:{{ internal_downloads }}"
        healthcheck:
            test: {{ health_check_vpn.test }}
            interval: {{ health_check_vpn.interval }}
            retries: {{ health_check_vpn.retries }}
            start_period: {{ health_check_vpn.start_period }}
            timeout: {{ health_check_vpn.timeout }}

    # readarr:
    #     image: lscr.io/linuxserver/readarr:develop
    #     restart: unless-stopped
    #     container_name: readarr
    #     depends_on:
    #         - gluetun
    #     environment:
    #         - TZ={{ time_zone }}
    #         - PUID="{{ users[0].PUID }}"
    #         - PGID={{ group_return_values.gid }}
    #         - UMASK={{ media_UMASK }}
    #     network_mode: "{{ unified_network }}"
    #     volumes:
    #         - "{{ readarr_config_path }}:/config"
    #         - "{{ media_path_books }}:{{ internal_books }}"
    #         - "{{ media_path_downloads }}:{{ internal_downloads }}"
    #     healthcheck:
    #         test: {{ health_check_vpn.test }}
    #         interval: {{ health_check_vpn.interval }}
    #         retries: {{ health_check_vpn.retries }}
    #         start_period: {{ health_check_vpn.start_period }}
    #         timeout: {{ health_check_vpn.timeout }}
    
    # Create Jackett, helps parse stuff of interest
    jackett:
        image: lscr.io/linuxserver/jackett:latest
        restart: unless-stopped
        container_name: jackett
        depends_on:
            - gluetun
        environment:
            - TZ={{ time_zone }}
            - PUID="{{ users[0].PUID }}"
            - PGID={{ group_return_values.gid }}
            - UMASK={{ media_UMASK }}
            - AUTO_UPDATE=true
        network_mode: "{{ unified_network }}"
        volumes:
            - "{{ jackett_config_path }}:/config"
        healthcheck:
            test: {{ health_check_vpn.test }}
            interval: {{ health_check_vpn.interval }}
            retries: {{ health_check_vpn.retries }}
            start_period: {{ health_check_vpn.start_period }}
            timeout: {{ health_check_vpn.timeout }}
    
    # Actually does the downloading, https://hub.docker.com/r/linuxserver/qbittorrent
    qbittorrent:
        image: lscr.io/linuxserver/qbittorrent:latest
        restart: unless-stopped
        container_name: qbittorrent
        depends_on:
            - gluetun
        environment:
            - TZ={{ time_zone }}
            - WEBUI_PORT=9078
            - PUID="{{ users[0].PUID }}"
            - PGID={{ group_return_values.gid }}
            - UMASK={{ media_UMASK }}
        network_mode: "{{ unified_network }}"
        volumes:
            - "{{ qbit_config_path }}:/config"
            - "{{ media_path_downloads }}:{{ internal_downloads }}"
        healthcheck:
            test: {{ health_check_vpn.test }}
            interval: {{ health_check_vpn.interval }}
            retries: {{ health_check_vpn.retries }}
            start_period: {{ health_check_vpn.start_period }}
            timeout: {{ health_check_vpn.timeout }}
        
    jellyfin:
        image: lscr.io/linuxserver/jellyfin:latest
        restart: unless-stopped
        container_name: jellyfin
        group_add:
            - "109" # Render group
        environment:
            - TZ={{ time_zone }}
            - PUID="{{ users[0].PUID }}"
            - PGID={{ group_return_values.gid }}
            - UMASK={{ media_UMASK }}
        ports:
            - "7260:8096"
        volumes:
            - "{{ jellyfin_config_path }}:/config"
            - "{{ media_path_tv }}:{{ internal_tv }}"
            - "{{ media_path_movies }}:{{ internal_movies }}"



networks:
    gluetun_vpn:

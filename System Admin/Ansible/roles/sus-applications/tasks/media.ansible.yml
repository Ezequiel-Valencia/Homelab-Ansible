# https://github.com/qdm12/gluetun/wiki
- name: Create Gluetun
  community.docker.docker_container:
    name: gluetun
    image: qmcgaw/gluetun
    state: started
    recreate: true
    restart_policy: always
    capabilities:
      - NET_ADMIN
    env:
      - VPN_SERVICE_PROVIDER: "{{ vpn_service_provider }}"
      - VPN_TYPE: wireguard
      - WIREGUARD_PRIVATE_KEY: "{{ wireguard_private_key }}"
      - WIREGUARD_ADDRESSES: 10.64.222.21/32
      - SERVER_CITIES: Amsterdam
      - DOT_PROVIDERS: quad9
      - UPDATER_PERIOD: "48h"

    # Only other ports, cause I'm not doing HTTP proxy or shadowsocks
    published_ports: "{{ gluetune_ports }}"
    volumes:
      - "{{ defualt_relative_docker_data_path }}/gluetun:/gluetun"

- name: Create jellyfin media
  community.docker.docker_container:
    name: Jellyfin
    image: linuxserver/jellyfin
    state: started
    recreate: true
    restart_policy: unless-stopped
    env:
      - TZ: "{{ time_zone }}"
    published_ports:
      - "7260:8096"
    volumes:
      - "{{ defualt_relative_docker_data_path }}/jellyfin:/config"
      - "{{ media_path_tv }}:/data/tvshows"
      - "{{ media_path_movies }}:/data/movies"

# Looks for files to download
- name: Create Jackett
  community.docker.docker_container:
    name: Jackett
    image: linuxserver/jackett
    state: started
    restart_policy: unless-stopped
    env:
      - TZ: "{{ time_zone }}"
    network_mode:
      container: gluetun
    volumes:
      - "{{ defualt_relative_docker_data_path }}/jackett/config:/config"


# - name: Create Open books
#   community.docker.docker_container:
#     name: Open Books

# Gets the subtitles for everything
- name: Create Bazarr
  community.docker.docker_container:
    name: Bazarr
    image: linuxserver/bazarr
    state: started
    restart_policy: unless-stopped
    network_mode:
      container: gluetun
    env:
      - TZ: "{{ time_zone }}"
    volumes:
      - "{{ defualt_relative_docker_data_path }}/bazarr/config:/config"
      - "{{ media_path_tv }}:/tv"
      - "{{ media_path_movies }}:/movies"


# Request shows automatically, https://hub.docker.com/r/linuxserver/sonarr
- name: Create Sonar
  community.docker.docker_container:
    name: Sonar
    image: linuxserver/sonar
    state: started
    restart_policy: unless-stopped
    env:
      - TZ: "{{ time_zone }}"
    network_mode:
      container: gluetun
    volumes:
      - "{{ defualt_relative_docker_data_path }}/sonar/config:/config"
      - "{{ media_path_tv }}:/tv"
      - "{{ media_path_downloads }}:/downloads"

# Request movies automatically, https://hub.docker.com/r/linuxserver/radarr
- name: Create Raddarr
  community.docker.docker_container:
    name: Raddarr
    image: linuxserver/radarr
    state: started
    restart_policy: unless-stopped
    env:
      - TZ: "{{ time_zone }}"
    network_mode:
      container: gluetun
    volumes:
      - "{{ defualt_relative_docker_data_path }}/raddarr/config:/config"
      - "{{ media_path_movies }}:/movies"
      - "{{ media_path_downloads }}:/downloads"

# Actually does the downloading, https://hub.docker.com/r/linuxserver/qbittorrent
- name: Create QBittorent
  community.docker.docker_container:
    name: QBittorent
    image: linuxserver/qbittorrent
    state: started
    restart_policy: unless-stopped # If it crashes I want to make sure manually everything is fine
    env:
      - TZ: "{{ time_zone }}"

    network_mode:
      container: gluetun

    volumes:
      - "{{ defualt_relative_docker_data_path }}/qbittorent/config:/config"
      - "{{ media_path_downloads }}:/downloads"

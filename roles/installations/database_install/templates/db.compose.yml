services:
    pgadmin:
    # https://www.pgadmin.org/docs/pgadmin4/latest/container_deployment.html
        image: dpage/pgadmin4:9.6.0
        restart: unless-stopped
        container_name: pgadmin
        hostname: pgadmin
        networks:
            database_network:
        environment:
            - PGADMIN_DEFAULT_PASSWORD={{ postgres_password }}
            - PGADMIN_DEFAULT_EMAIL=ezq.valencia@gmail.com
        # ports:
        #     - "127.0.0.1:9999:80"
        volumes:
            - "{{ defualt_relative_docker_data_path }}/pgadmin:/var/lib/pgadmin"
    postgres:
        image: postgres:17
        restart: unless-stopped
        container_name: postgres
        hostname: postgres
        networks:
            database_network:
        environment:
            - POSTGRES_PASSWORD={{ postgres_password }}
        # ports:
        #     - "127.0.0.1:5432:5432"
        volumes:
            - "{{ defualt_relative_docker_data_path }}/postgres:/var/lib/postgresql/data"
            - "{{ defualt_relative_docker_data_path }}/postgres_table_space:/var/lib/postgres_table_space"
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U myuser -d mydb -h localhost"]
            interval: 60s
            retries: 5
            start_period: 30s
            timeout: 10s

    qdrant:
        image: qdrant/qdrant:v1.15.2
        restart: unless-stopped
        container_name: qdrant
        networks:
            database_network:
        # ports:
        #     - "127.0.0.1:6333:6333" # HTTP
        #     - "127.0.0.1:6334:6334" # GRPC
        volumes:
            - "{{ defualt_relative_docker_data_path }}/qdrant:/qdrant/storage"

    traefik:
        image: traefik:3.4.1
        container_name: traefik
        restart: unless-stopped
        user: {{ traefik_local_user }}
        security_opt:
            - no-new-privileges:true
        networks:
            database_network:
        ports:
            - 80:80
            - 443:443
        environment:
            - CF_DNS_API_TOKEN={{ cloudflare_token }}
            - CF_ZONE_API_TOKEN={{ cloudflare_token }}
        volumes:
            - /etc/localtime:/etc/localtime:ro
            - /var/run/docker.sock:/var/run/docker.sock:ro
            - {{ defualt_relative_docker_data_path }}/traefik/traefik.yml:/traefik.yml:ro
            - {{ defualt_relative_docker_data_path }}/traefik/acme.json:/acme.json
            - {{ defualt_relative_docker_data_path }}/traefik/config.yml:/config.yml:ro
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.traefik.entrypoints=http"
            - "traefik.http.middlewares.traefik-https-redirect.redirectscheme.scheme=https"
            - "traefik.http.middlewares.sslheader.headers.customrequestheaders.X-Forwarded-Proto=https"
            - "traefik.http.routers.traefik.middlewares=traefik-https-redirect"
            - "traefik.http.routers.traefik-secure.entrypoints=https"
            - "traefik.http.routers.traefik-secure.tls=true"
            - "traefik.http.routers.traefik-secure.tls.certresolver=cloudflareResolver"
            - "traefik.http.routers.traefik-secure.tls.domains[0].main=homelab.ezequielvalencia.com"
            - "traefik.http.routers.traefik-secure.tls.domains[0].sans=*.database.homelab.ezequielvalencia.com"
            - "traefik.http.routers.traefik-secure.service=api@internal"


networks:
    database_network:

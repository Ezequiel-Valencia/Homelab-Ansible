apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: mediavpn
  name: mediavpn
spec:
  selector:
    matchLabels:
      app: mediavpn
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: mediavpn
    spec:
      # https://www.ibm.com/docs/de/spectrum-conductor/2.5.0?topic=instances-network-provisioning-docker-pods
      # https://stackoverflow.com/questions/49368047/what-is-the-equivalent-for-depends-on-in-kubernetes
      
      # TODO: Check storage works
      # Sidecar container because of restart policy
      initContainers:
        - name: gluetun
          image: qmcgaw/gluetun:v3.35.0
          imagePullPolicy: "Always"
          envFrom:
            - secretRef:
                name: vpn-secrets
          securityContext:
            allowPrivilegeEscalation: false
            privileged: false
            capabilities: 
              add: ["NET_ADMIN"] # https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
          resources:
            limits:
              cpu: 100m
              memory: 512M # 0.5GB Memory
          restartPolicy: Always

          env: 
            - name: LOG_LEVEL
              value: debug
          # If it's not "alive", then the container will restart itself, and since all containers
          # rely on this containers network stack, if it restarts
          livenessProbe:
            exec:
              command:
                - curl -s --fail https://ipinfo.io/region | grep -qxo "Connecticut" || exit 1
            periodSeconds: 120
            timeoutSeconds: 20
          # volumeMounts:
          #   - name: media-config-local-storage
          #     mountPath: /gluetun
          #     subPath: gluetun
          # healthcheck: # https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/        
      
      containers:   
        - name: jackett
          image: lscr.io/linuxserver/jackett:latest
          imagePullPolicy: Always
          env:
            - name: AUTO_UPDATE
              value: 'true'
          resources:
            limits: 
              memory: 512M
          ports:
            - containerPort: 9117
          envFrom:
            - configMapRef:
                name: time-zone
            - configMapRef:
                name: torrent-user
          securityContext:
            allowPrivilegeEscalation: false
            privileged: false
          volumeMounts:
            - name: media-config-local-storage
              mountPath: /config
              subPath: jackett
        
        - name: qbittorrent
          image: lscr.io/linuxserver/qbittorrent:latest
          imagePullPolicy: Always
          env:
            - name: WEBUI_PORT
              value: '9078'
          resources:
            limits: 
              memory: 512M
          ports:
            - containerPort: 9078
          envFrom:
            - configMapRef:
                name: time-zone
            - configMapRef:
                name: torrent-user
          securityContext:
            allowPrivilegeEscalation: false
            privileged: false
          volumeMounts:
            - name: media-config-local-storage
              mountPath: /config
              subPath: qbittorent
            - name: media-local-storage
              mountPath: /media/downloads
              subPath: downloads
      
      volumes:
        - name: media-config-local-storage
          persistentVolumeClaim:
            claimName: media-config-local-storage-claim
        - name: media-local-storage
          persistentVolumeClaim:
            claimName: media-local-storage-claim
      restartPolicy: Always

---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: mediavpn
  name: mediavpn
spec:
  ports:
    - name: jackett
      port: 9845
      targetPort: 9117
    - name: qbit-web-ui
      port: 9078
      targetPort: 9078
    - name: qbit-tcp
      port: 7439
      targetPort: 6881
      protocol: TCP
    - name: qbit-udp
      port: 7439
      targetPort: 6881
      protocol: UDP
  selector:
    app: mediavpn